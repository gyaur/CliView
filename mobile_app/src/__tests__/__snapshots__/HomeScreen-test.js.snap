// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen snapshot 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "gray",
        "borderRadius": 7,
        "height": 100,
        "marginHorizontal": 15,
        "marginTop": 25,
      }
    }
  >
    <Text>
      Logo
    </Text>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#F0EEEE",
        "borderRadius": 7,
        "flexDirection": "row",
        "height": 50,
        "marginHorizontal": 15,
        "marginTop": 15,
      }
    }
  >
    <Text />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      onEndEditing={[Function]}
      placeholder="URL"
      rejectResponderTermination={true}
      style={
        Object {
          "flex": 1,
          "fontSize": 18,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginTop": 15,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#576574",
              },
            ]
          }
        >
          Cast now
        </Text>
      </View>
    </View>
    <Text
      style={
        Object {
          "color": "#c8d6e5",
          "marginHorizontal": 10,
        }
      }
    >
       Or
    </Text>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#576574",
              },
            ]
          }
        >
          Add to queue
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginLeft": "auto",
        "marginRight": "auto",
        "marginTop": 50,
      }
    }
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 50,
            "flex": 1,
            "margin": 15,
            "marginLeft": 25,
            "opacity": 1,
            "paddingTop": 15,
          }
        }
      >
        <Text />
      </View>
    </View>
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 80,
            "flex": 1,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <Text />
      </View>
    </View>
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 50,
            "flex": 1,
            "margin": 15,
            "marginRight": 25,
            "opacity": 1,
            "paddingTop": 15,
          }
        }
      >
        <Text />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginTop": 50,
        "width": "90%",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "90%",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flexGrow": 1,
            "marginHorizontal": 10,
            "opacity": 1,
            "padding": 10,
          }
        }
      >
        <Text />
      </View>
      <RNCSlider
        disabled={false}
        enabled={true}
        inverted={false}
        maximumTrackTintColor="#576574"
        maximumValue={100}
        minimumTrackTintColor="#c8d6e5"
        minimumValue={0}
        onChange={[Function]}
        onRNCSliderSlidingComplete={[Function]}
        onRNCSliderSlidingStart={null}
        onRNCSliderValueChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        step={10}
        style={
          Array [
            Object {
              "height": 40,
            },
            Object {
              "flexGrow": 1,
              "height": 40,
              "width": 250,
            },
          ]
        }
        thumbImage={
          Object {
            "__packager_asset": true,
            "height": 1,
            "scale": 1,
            "uri": "uri",
            "width": 1,
          }
        }
        thumbTintColor="#c8d6e5"
        value={50}
      />
    </View>
  </View>
</View>
`;
